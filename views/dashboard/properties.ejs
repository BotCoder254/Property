<%- contentFor('body') %>

<div class="container mx-auto px-4 py-8">
    <div class="bg-white shadow-lg rounded-lg p-6">
        <!-- Header -->
        <div class="flex justify-between items-center mb-6">
            <div>
                <h2 class="text-2xl font-bold text-gray-800">My Properties</h2>
                <p class="text-sm text-gray-600">Manage your property listings and bookings</p>
                <% if (messages.success) { %>
                    <p class="mt-2 text-sm text-green-600"><%= messages.success %></p>
                <% } %>
                <% if (messages.error) { %>
                    <p class="mt-2 text-sm text-red-600"><%= messages.error %></p>
                <% } %>
            </div>
            <a href="/properties/new" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700">
                <i class="fas fa-plus mr-2"></i> Add New Property
            </a>
        </div>

        <!-- Property Stats -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
            <div class="bg-indigo-50 p-4 rounded-lg">
                <h3 class="text-sm font-medium text-indigo-800">Total Properties</h3>
                <p class="text-2xl font-bold text-indigo-900"><%= stats.totalProperties %></p>
            </div>
            <div class="bg-green-50 p-4 rounded-lg">
                <h3 class="text-sm font-medium text-green-800">Active Bookings</h3>
                <p class="text-2xl font-bold text-green-900"><%= stats.activeBookings %></p>
            </div>
            <div class="bg-yellow-50 p-4 rounded-lg">
                <h3 class="text-sm font-medium text-yellow-800">Average Rating</h3>
                <p class="text-2xl font-bold text-yellow-900"><%= stats.averageRating.toFixed(1) %> <i class="fas fa-star text-yellow-400 text-lg"></i></p>
            </div>
            <div class="bg-blue-50 p-4 rounded-lg">
                <h3 class="text-sm font-medium text-blue-800">Total Revenue</h3>
                <p class="text-2xl font-bold text-blue-900">$<%= stats.totalRevenue.toLocaleString() %></p>
            </div>
        </div>

        <!-- Property List -->
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Property</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bookings</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Revenue</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rating</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <% properties.forEach(property => { %>
                        <tr class="hover:bg-gray-50">
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <img src="<%= property.images[0] %>" alt="Property" class="h-10 w-10 rounded-md object-cover">
                                    <div class="ml-4">
                                        <div class="text-sm font-medium text-gray-900"><%= property.title %></div>
                                        <div class="text-sm text-gray-500"><%= property.location.city %></div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full
                                    <%= property.status === 'available' ? 'bg-green-100 text-green-800' :
                                        property.status === 'maintenance' ? 'bg-yellow-100 text-yellow-800' :
                                        'bg-red-100 text-red-800' %>">
                                    <%= property.status.charAt(0).toUpperCase() + property.status.slice(1) %>
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-900"><%= property.totalBookings %> bookings</div>
                                <div class="text-xs text-gray-500"><%= property.activeBookings %> active</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm font-medium text-gray-900">$<%= property.revenue.toLocaleString() %></div>
                                <div class="text-xs text-gray-500">Lifetime</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <span class="text-sm text-gray-900 mr-1"><%= property.avgRating.toFixed(1) %></span>
                                    <i class="fas fa-star text-yellow-400"></i>
                                    <span class="text-xs text-gray-500 ml-1">(<%= property.ratings.length %>)</span>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                <div class="flex space-x-3">
                                    <button onclick="editProperty('<%= property._id %>')" class="text-indigo-600 hover:text-indigo-900 transition-colors duration-200" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button onclick="viewProperty('<%= property._id %>')" class="text-blue-600 hover:text-blue-900 transition-colors duration-200" title="View">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button onclick="viewBookings('<%= property._id %>')" class="text-green-600 hover:text-green-900 transition-colors duration-200" title="Bookings">
                                        <i class="fas fa-calendar-alt"></i>
                                    </button>
                                    <button onclick="togglePropertyStatus('<%= property._id %>', '<%= property.status %>')" 
                                            class="<%= property.status === 'available' ? 'text-red-600 hover:text-red-900' : 'text-green-600 hover:text-green-900' %> transition-colors duration-200" 
                                            title="<%= property.status === 'available' ? 'Make Unavailable' : 'Make Available' %>">
                                        <i class="fas fa-power-off"></i>
                                    </button>
                                    <button onclick="deleteProperty('<%= property._id %>')" class="text-red-600 hover:text-red-900 transition-colors duration-200" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>

        <!-- Empty State -->
        <% if (properties.length === 0) { %>
            <div class="text-center py-12">
                <div class="text-gray-400 mb-4">
                    <i class="fas fa-home text-6xl"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900">No Properties Listed</h3>
                <p class="mt-1 text-gray-500">Start by adding your first property</p>
                <a href="/properties/new" class="mt-4 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700">
                    <i class="fas fa-plus mr-2"></i> Add New Property
                </a>
            </div>
        <% } %>
    </div>
</div>

<!-- Loading Indicator -->
<div id="global-loading" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 flex items-center space-x-4">
        <div class="animate-spin rounded-full h-10 w-10 border-4 border-indigo-600 border-t-transparent"></div>
        <span class="text-lg font-medium text-gray-900">Loading...</span>
    </div>
</div>

<%- contentFor('scripts') %>
<script>
    const loadingIndicator = document.getElementById('global-loading');

    function showLoading() {
        loadingIndicator.classList.remove('hidden');
        loadingIndicator.classList.add('flex');
    }

    function hideLoading() {
        loadingIndicator.classList.add('hidden');
        loadingIndicator.classList.remove('flex');
    }

    function handleError(error) {
        console.error('Error:', error);
        hideLoading();
        alert(error.message || 'An error occurred');
    }

    // Simple navigation functions
    function editProperty(propertyId) {
        window.location.href = `/properties/${propertyId}/edit`;
    }

    function viewProperty(propertyId) {
        window.location.href = `/properties/${propertyId}`;
    }

    function viewBookings(propertyId) {
        window.location.href = `/dashboard/bookings?property=${propertyId}`;
    }

    async function togglePropertyStatus(propertyId, currentStatus) {
        const confirmMessage = currentStatus === 'available' 
            ? 'Are you sure you want to make this property unavailable?' 
            : 'Are you sure you want to make this property available?';

        if (!confirm(confirmMessage)) return;

        try {
            showLoading();
            const response = await fetch(`/properties/${propertyId}/toggle-status`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                const data = await response.json();
                throw new Error(data.error || 'Failed to update property status');
            }

            location.reload();
        } catch (error) {
            handleError(error);
        }
    }

    async function deleteProperty(propertyId) {
        if (!confirm('Are you sure you want to delete this property? This action cannot be undone.')) return;

        try {
            showLoading();
            const response = await fetch(`/properties/${propertyId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                const data = await response.json();
                throw new Error(data.error || 'Failed to delete property');
            }

            location.reload();
        } catch (error) {
            handleError(error);
        }
    }

    // Add loading indicator for navigation
    document.addEventListener('DOMContentLoaded', function() {
        // Show loading on button clicks
        document.querySelectorAll('button[onclick]').forEach(button => {
            const originalOnClick = button.getAttribute('onclick');
            button.onclick = function(e) {
                e.preventDefault();
                showLoading();
                eval(originalOnClick);
            };
        });

        // Show loading on link clicks
        document.querySelectorAll('a').forEach(link => {
            link.addEventListener('click', function(e) {
                if (!e.ctrlKey && !e.shiftKey && !e.metaKey && !e.altKey) {
                    showLoading();
                }
            });
        });
    });
</script> 