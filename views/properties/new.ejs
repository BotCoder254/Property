<%- contentFor('body') %>

<div class="container mx-auto px-4 py-8">
    <div class="bg-white shadow-lg rounded-lg p-6 max-w-4xl mx-auto">
        <h2 class="text-2xl font-bold text-gray-800 mb-6">Add New Property</h2>
        
        <form action="/properties" method="POST" enctype="multipart/form-data" class="space-y-6">
            <!-- Basic Information -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Property Title</label>
                    <input type="text" name="title" required
                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Property Type</label>
                    <select name="type" required
                            class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                        <option value="">Select Type</option>
                        <option value="apartment">Apartment</option>
                        <option value="house">House</option>
                        <option value="villa">Villa</option>
                        <option value="condo">Condo</option>
                        <option value="studio">Studio</option>
                    </select>
                </div>
            </div>

            <!-- Location -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Street Address</label>
                    <input type="text" name="location[street]" required
                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">City</label>
                    <input type="text" name="location[city]" required
                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">ZIP Code</label>
                    <input type="text" name="location[zipCode]" required
                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                </div>
            </div>

            <!-- Features -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Bedrooms</label>
                    <input type="number" name="features[beds]" min="0" required
                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Bathrooms</label>
                    <input type="number" name="features[baths]" min="0" step="0.5" required
                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Square Feet</label>
                    <input type="number" name="features[sqft]" min="0" required
                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                </div>
            </div>

            <!-- Amenities -->
            <div class="space-y-4">
                <label class="block text-sm font-medium text-gray-700">Amenities</label>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                    <label class="flex items-center space-x-2">
                        <input type="checkbox" name="amenities[]" value="furnished" class="rounded text-indigo-600">
                        <span class="text-sm text-gray-700">Furnished</span>
                    </label>
                    <label class="flex items-center space-x-2">
                        <input type="checkbox" name="amenities[]" value="parking" class="rounded text-indigo-600">
                        <span class="text-sm text-gray-700">Parking</span>
                    </label>
                    <label class="flex items-center space-x-2">
                        <input type="checkbox" name="amenities[]" value="airConditioning" class="rounded text-indigo-600">
                        <span class="text-sm text-gray-700">Air Conditioning</span>
                    </label>
                    <label class="flex items-center space-x-2">
                        <input type="checkbox" name="amenities[]" value="heating" class="rounded text-indigo-600">
                        <span class="text-sm text-gray-700">Heating</span>
                    </label>
                    <label class="flex items-center space-x-2">
                        <input type="checkbox" name="amenities[]" value="washer" class="rounded text-indigo-600">
                        <span class="text-sm text-gray-700">Washer</span>
                    </label>
                    <label class="flex items-center space-x-2">
                        <input type="checkbox" name="amenities[]" value="dryer" class="rounded text-indigo-600">
                        <span class="text-sm text-gray-700">Dryer</span>
                    </label>
                    <label class="flex items-center space-x-2">
                        <input type="checkbox" name="amenities[]" value="wifi" class="rounded text-indigo-600">
                        <span class="text-sm text-gray-700">WiFi</span>
                    </label>
                    <label class="flex items-center space-x-2">
                        <input type="checkbox" name="amenities[]" value="tv" class="rounded text-indigo-600">
                        <span class="text-sm text-gray-700">TV</span>
                    </label>
                </div>
            </div>

            <!-- Pricing -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Price per Night ($)</label>
                    <input type="number" name="price" min="0" step="0.01" required
                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Security Deposit ($)</label>
                    <input type="number" name="securityDeposit" min="0" step="0.01"
                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
                </div>
            </div>

            <!-- Description -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                <textarea name="description" rows="4" required
                          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500"></textarea>
            </div>

            <!-- House Rules -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">House Rules</label>
                <textarea name="houseRules" rows="3"
                          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500"
                          placeholder="Enter any specific rules or guidelines for guests..."></textarea>
            </div>

            <!-- Images -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Property Images</label>
                <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md">
                    <div class="space-y-1 text-center">
                        <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <div class="flex text-sm text-gray-600">
                            <label for="images" class="relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500">
                                <span>Upload images</span>
                                <input id="images" name="images" type="file" class="hidden" multiple accept="image/*" required>
                            </label>
                            <p class="pl-1">or drag and drop</p>
                        </div>
                        <p class="text-xs text-gray-500">PNG, JPG, GIF up to 5MB</p>
                    </div>
                </div>
                <div id="imagePreview" class="grid grid-cols-2 md:grid-cols-4 gap-4 mt-4">
                    <div class="col-span-full text-sm text-gray-500 text-center hidden" id="noImagesMessage">
                        No images selected
                    </div>
                </div>
            </div>

            <!-- Submit Button -->
            <div class="flex justify-end">
                <button type="submit" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    <i class="fas fa-plus mr-2"></i> Create Property
                </button>
            </div>
        </form>
    </div>
</div>

<%- contentFor('scripts') %>
<script>
    // Image preview functionality
    const imageInput = document.getElementById('images');
    const imagePreview = document.getElementById('imagePreview');
    const noImagesMessage = document.getElementById('noImagesMessage');

    imageInput.addEventListener('change', function() {
        imagePreview.innerHTML = '';
        
        if (this.files.length === 0) {
            noImagesMessage.classList.remove('hidden');
            return;
        }

        noImagesMessage.classList.add('hidden');
        
        for (const file of this.files) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const div = document.createElement('div');
                div.className = 'relative aspect-w-16 aspect-h-9 group';
                div.innerHTML = `
                    <img src="${e.target.result}" alt="Preview" class="object-cover rounded-lg w-full h-full">
                    <div class="absolute inset-0 bg-black bg-opacity-40 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center rounded-lg">
                        <button type="button" class="text-white hover:text-red-500 transition-colors" onclick="removeImage(this)">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>
                `;
                imagePreview.appendChild(div);
            }
            reader.readAsDataURL(file);
        }
    });

    function removeImage(button) {
        const container = button.closest('.relative');
        container.remove();
        
        if (imagePreview.children.length === 0) {
            noImagesMessage.classList.remove('hidden');
            imageInput.value = ''; // Reset the file input
        }
    }

    // Form validation
    const form = document.querySelector('form');
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Basic validation
        const requiredFields = form.querySelectorAll('[required]');
        let isValid = true;

        requiredFields.forEach(field => {
            if (!field.value) {
                isValid = false;
                field.classList.add('border-red-500');
            } else {
                field.classList.remove('border-red-500');
            }
        });

        if (isValid) {
            this.submit();
        }
    });
</script> 