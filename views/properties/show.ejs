<!-- Swiper CSS -->
<link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
<!-- FullCalendar CSS -->
<link href='https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.10/main.min.css' rel='stylesheet' />
<link href='https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@6.1.10/main.min.css' rel='stylesheet' />
<!-- Stripe Elements CSS -->
<style>
    .StripeElement {
        background-color: white;
        padding: 12px;
        border-radius: 4px;
        border: 1px solid #e2e8f0;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
    }
    .StripeElement--focus {
        border-color: #4f46e5;
        box-shadow: 0 1px 3px 0 rgba(79, 70, 229, 0.2);
    }
    .StripeElement--invalid {
        border-color: #ef4444;
    }
</style>

<div class="bg-gray-100 min-h-screen py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Property Header -->
        <div class="bg-white rounded-lg shadow-lg overflow-hidden">
            <!-- Single Image Display -->
            <div class="relative h-96">
                <% if (property.images && property.images.length > 0) { %>
                    <img src="<%= property.images[0] %>" alt="Property Image" class="w-full h-full object-cover">
                <% } else { %>
                    <div class="w-full h-full bg-gray-200 flex items-center justify-center">
                        <span class="text-gray-500">No image available</span>
                    </div>
                <% } %>
            </div>

            <!-- Property Info -->
            <div class="p-8">
                <div class="flex justify-between items-start">
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900"><%= property.title %></h1>
                        <div class="mt-2 text-gray-600 flex items-center">
                            <i class="fas fa-map-marker-alt mr-2"></i>
                            <span><%= property.location.street %>, <%= property.location.city %> <%= property.location.zipCode %></span>
                        </div>
                    </div>
                    <div class="text-right">
                        <p class="text-3xl font-bold text-indigo-600">$<%= property.price %></p>
                        <p class="text-sm text-gray-500">per night</p>
                    </div>
                </div>

                <!-- Property Location -->
                <div class="mt-8">
                    <h2 class="text-xl font-semibold text-gray-900 mb-4">Location Details</h2>
                    <div class="bg-gray-50 rounded-lg p-6">
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                            <div class="flex flex-col">
                                <span class="text-sm text-gray-500 mb-1">Street Address</span>
                                <span class="text-lg font-medium text-gray-900"><%= property.location.street %></span>
                            </div>
                            <div class="flex flex-col">
                                <span class="text-sm text-gray-500 mb-1">City</span>
                                <span class="text-lg font-medium text-gray-900"><%= property.location.city %></span>
                            </div>
                            <div class="flex flex-col">
                                <span class="text-sm text-gray-500 mb-1">ZIP Code</span>
                                <span class="text-lg font-medium text-gray-900"><%= property.location.zipCode %></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Property Features -->
                <div class="mt-8">
                    <h2 class="text-xl font-semibold text-gray-900 mb-4">Property Details</h2>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div class="bg-gray-50 rounded-lg p-4">
                            <div class="flex items-center">
                                <i class="fas fa-bed text-indigo-600 text-xl w-8"></i>
                                <div>
                                    <span class="text-gray-600 block text-sm">Bedrooms</span>
                                    <span class="font-medium text-gray-900"><%= property.features.beds %></span>
                                </div>
                            </div>
                        </div>
                        <div class="bg-gray-50 rounded-lg p-4">
                            <div class="flex items-center">
                                <i class="fas fa-bath text-indigo-600 text-xl w-8"></i>
                                <div>
                                    <span class="text-gray-600 block text-sm">Bathrooms</span>
                                    <span class="font-medium text-gray-900"><%= property.features.baths %></span>
                                </div>
                            </div>
                        </div>
                        <div class="bg-gray-50 rounded-lg p-4">
                            <div class="flex items-center">
                                <i class="fas fa-ruler-combined text-indigo-600 text-xl w-8"></i>
                                <div>
                                    <span class="text-gray-600 block text-sm">Square Feet</span>
                                    <span class="font-medium text-gray-900"><%= property.features.sqft %></span>
                                </div>
                            </div>
                        </div>
                        <div class="bg-gray-50 rounded-lg p-4">
                            <div class="flex items-center">
                                <i class="fas fa-home text-indigo-600 text-xl w-8"></i>
                                <div>
                                    <span class="text-gray-600 block text-sm">Type</span>
                                    <span class="font-medium text-gray-900"><%= property.type.charAt(0).toUpperCase() + property.type.slice(1) %></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Property Images -->
                <div class="mt-8">
                    <h2 class="text-xl font-semibold text-gray-900 mb-4">Property Images</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        <% property.images.forEach((image, index) => { %>
                            <div class="relative aspect-w-16 aspect-h-9">
                                <img src="<%= image %>" alt="Property image <%= index + 1 %>" class="object-cover rounded-lg w-full h-full">
                            </div>
                        <% }); %>
                    </div>
                </div>

                <!-- Description -->
                <div class="mt-8">
                    <h2 class="text-xl font-semibold text-gray-900 mb-4">Description</h2>
                    <div class="bg-gray-50 rounded-lg p-4">
                        <p class="text-gray-600 whitespace-pre-line"><%= property.description %></p>
                    </div>
                </div>

                <!-- Amenities -->
                <div class="mt-8">
                    <h2 class="text-xl font-semibold text-gray-900 mb-4">Amenities</h2>
                    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                        <% property.amenities.forEach(amenity => { %>
                            <div class="bg-gray-50 rounded-lg p-4">
                                <div class="flex items-center text-gray-600">
                                    <i class="fas fa-check text-green-500 mr-2"></i>
                                    <%= amenity.charAt(0).toUpperCase() + amenity.slice(1) %>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>

                <!-- House Rules -->
                <% if (property.houseRules) { %>
                <div class="mt-8">
                    <h2 class="text-xl font-semibold text-gray-900 mb-4">House Rules</h2>
                    <div class="bg-gray-50 rounded-lg p-4">
                        <p class="text-gray-600 whitespace-pre-line"><%= property.houseRules %></p>
                    </div>
                </div>
                <% } %>

                <!-- Booking Form -->
                <% if (user && user.role === 'renter' && (!property.owner || user._id.toString() !== property.owner._id.toString())) { %>
                    <div class="mt-8 bg-white rounded-lg shadow p-6">
                        <h2 class="text-xl font-semibold text-gray-900 mb-4">Book this Property</h2>
                        <form id="booking-form" class="space-y-4">
                            <input type="hidden" name="propertyId" value="<%= property._id %>">
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Check-in Date</label>
                                    <input type="date" name="startDate" id="startDate" required min="<%= moment().format('YYYY-MM-DD') %>"
                                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Check-out Date</label>
                                    <input type="date" name="endDate" id="endDate" required min="<%= moment().add(1, 'days').format('YYYY-MM-DD') %>"
                                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3">
                                </div>
                            </div>

                            <!-- Price Details -->
                            <div id="price-details" class="mt-4 bg-gray-50 p-4 rounded-md">
                                <h3 class="text-lg font-medium text-gray-900 mb-2">Price Details</h3>
                                <div class="space-y-2 text-sm">
                                    <div class="flex justify-between">
                                        <span>Price per night</span>
                                        <span id="price-per-night">$<%= property.price.toLocaleString() %></span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span>Number of nights</span>
                                        <span id="num-nights">-</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span>Subtotal</span>
                                        <span id="subtotal">-</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span>Service fee (10%)</span>
                                        <span id="service-fee">-</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span>Security deposit</span>
                                        <span id="security-deposit">$<%= property.securityDeposit ? property.securityDeposit.toLocaleString() : '0' %></span>
                                    </div>
                                    <div class="flex justify-between font-medium text-base pt-2 border-t">
                                        <span>Total</span>
                                        <span id="total-price">-</span>
                                    </div>
                                </div>
                            </div>

                            <div>
                                <label class="block text-sm font-medium text-gray-700">Special Requests</label>
                                <textarea name="specialRequests" rows="3" 
                                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3"></textarea>
                            </div>

                            <!-- Book Now Button -->
                            <button type="button" id="book-now-button"
                                class="w-full bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed">
                                Book Now
                            </button>

                            <!-- Payment Section -->
                            <div id="payment-section" class="hidden mt-4">
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Card Details</label>
                                    <div id="card-element" class="p-3 border border-gray-300 rounded-md"></div>
                                    <div id="card-errors" class="mt-2 text-red-600 text-sm"></div>
                                </div>

                                <button type="submit" id="submit-button"
                                    class="w-full bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed">
                                    <span id="button-text">Confirm Payment</span>
                                    <div id="spinner" class="hidden">
                                        <div class="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent inline-block"></div>
                                        Processing...
                                    </div>
                                </button>
                            </div>
                        </form>

                        <div class="mt-4 text-sm text-gray-500">
                            <p><i class="fas fa-info-circle mr-1"></i> Your card will only be charged after the owner confirms your booking</p>
                            <p class="mt-1"><i class="fas fa-shield-alt mr-1"></i> Security deposit will be refunded after your stay if no damages are reported</p>
                        </div>
                    </div>
                <% } else if (user && user._id.toString() === property.owner._id.toString()) { %>
                    <div class="bg-gray-100 rounded-lg p-4 text-center">
                        <p class="text-gray-600">This is your property. You cannot book your own property.</p>
                    </div>
                <% } else if (!user) { %>
                    <div class="bg-gray-100 rounded-lg p-4 text-center">
                        <p class="text-gray-600">Please <a href="/auth/login" class="text-indigo-600 hover:text-indigo-800">log in</a> to book this property.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<!-- Swiper JS -->
<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<!-- FullCalendar JS -->
<script src='https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.10/main.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@6.1.10/main.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/@fullcalendar/interaction@6.1.10/main.min.js'></script>
<!-- Stripe JS -->
<script src="https://js.stripe.com/v3/"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const startDateInput = document.getElementById('startDate');
        const endDateInput = document.getElementById('endDate');
        const bookNowButton = document.getElementById('book-now-button');
        const paymentSection = document.getElementById('payment-section');
        const submitButton = document.getElementById('submit-button');
        const form = document.getElementById('booking-form');
        const spinner = document.getElementById('spinner');
        const buttonText = document.getElementById('button-text');
        const priceDetails = document.getElementById('price-details');

        const pricePerNight = <%= property.price %>;
        const securityDeposit = <%= property.securityDeposit || 0 %>;
        let stripe = Stripe('<%= process.env.STRIPE_PUBLISHABLE_KEY %>');

        function formatCurrency(amount) {
            return '$' + parseFloat(amount).toLocaleString('en-US', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
        }

        function calculateTotalPrice() {
            if (!startDateInput.value || !endDateInput.value) {
                return;
            }

            const startDate = new Date(startDateInput.value);
            const endDate = new Date(endDateInput.value);

            if (endDate <= startDate) {
                alert('Check-out date must be after check-in date');
                endDateInput.value = '';
                return;
            }

            // Calculate number of nights
            const timeDiff = endDate.getTime() - startDate.getTime();
            const nights = Math.ceil(timeDiff / (1000 * 3600 * 24));

            // Calculate costs
            const subtotal = nights * pricePerNight;
            const serviceFee = subtotal * 0.10; // 10% service fee
            const total = subtotal + serviceFee + securityDeposit;

            // Update display
            document.getElementById('num-nights').textContent = nights;
            document.getElementById('subtotal').textContent = formatCurrency(subtotal);
            document.getElementById('service-fee').textContent = formatCurrency(serviceFee);
            document.getElementById('total-price').textContent = formatCurrency(total);

            // Enable booking button and show price details
            bookNowButton.disabled = false;
            bookNowButton.classList.remove('opacity-50', 'cursor-not-allowed');
            priceDetails.classList.remove('opacity-50');

            return { subtotal, serviceFee, total, nights };
        }

        // Add event listeners for date changes
        ['input', 'change'].forEach(event => {
            startDateInput.addEventListener(event, calculateTotalPrice);
            endDateInput.addEventListener(event, calculateTotalPrice);
        });

        // Set minimum dates
        const today = new Date();
        startDateInput.min = today.toISOString().split('T')[0];
        
        // Update end date minimum when start date changes
        startDateInput.addEventListener('change', function() {
            if (startDateInput.value) {
                const nextDay = new Date(startDateInput.value);
                nextDay.setDate(nextDay.getDate() + 1);
                endDateInput.min = nextDay.toISOString().split('T')[0];
                if (endDateInput.value && new Date(endDateInput.value) <= new Date(startDateInput.value)) {
                    endDateInput.value = '';
                }
                calculateTotalPrice();
            }
        });

        // Initialize state
        bookNowButton.disabled = true;
        bookNowButton.classList.add('opacity-50', 'cursor-not-allowed');
        priceDetails.classList.add('opacity-50');

        // Handle Book Now button click
        bookNowButton.addEventListener('click', function() {
            if (!startDateInput.value || !endDateInput.value) {
                alert('Please select both check-in and check-out dates');
                return;
            }

            // Show payment section
            bookNowButton.classList.add('hidden');
            paymentSection.classList.remove('hidden');

            // Initialize card element
            const elements = stripe.elements();
            const card = elements.create('card');
            card.mount('#card-element');

            // Handle card validation errors
            card.addEventListener('change', function(event) {
                const displayError = document.getElementById('card-errors');
                displayError.textContent = event.error ? event.error.message : '';
            });
        });

        // Handle form submission
        form.addEventListener('submit', async function(event) {
            event.preventDefault();

            submitButton.disabled = true;
            spinner.classList.remove('hidden');
            buttonText.classList.add('hidden');

            try {
                // Create booking
                const bookingResponse = await fetch('/bookings', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({
                        propertyId: form.propertyId.value,
                        startDate: form.startDate.value,
                        endDate: form.endDate.value,
                        specialRequests: form.specialRequests.value
                    })
                });

                if (!bookingResponse.ok) {
                    throw new Error('Failed to create booking');
                }

                const bookingData = await bookingResponse.json();

                // Create payment intent
                const paymentResponse = await fetch('/payments/create-payment-intent', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({
                        bookingId: bookingData.booking._id
                    })
                });

                if (!paymentResponse.ok) {
                    throw new Error('Failed to create payment intent');
                }

                const paymentData = await paymentResponse.json();

                // Confirm card payment
                const { error, paymentIntent } = await stripe.confirmCardPayment(
                    paymentData.clientSecret,
                    {
                        payment_method: {
                            card: card,
                            billing_details: {
                                name: '<%= user ? user.name : "" %>'
                            }
                        }
                    }
                );

                if (error) {
                    throw error;
                }

                // Payment successful - redirect to dashboard
                window.location.href = '/dashboard';
            } catch (error) {
                const errorElement = document.getElementById('card-errors');
                errorElement.textContent = error.message || 'An error occurred during payment.';
                submitButton.disabled = false;
                spinner.classList.add('hidden');
                buttonText.classList.remove('hidden');
            }
        });
    });
</script> 